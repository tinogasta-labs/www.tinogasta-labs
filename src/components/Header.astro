---
import Container from '~/components/shared/Container.astro'
import Icon from '~/components/ui/Icon.astro'

// Define your navigation items
const navItems = [
  { name: 'About', url: '#about' },
  { name: 'Services', url: '#services' },
  { name: 'Contact', url: '#contact' },
  { name: 'FAQ', url: '#faq' },
]
---

<header class="px-6">
  <Container>
    <nav class="relative z-50">
      <div class="flex h-24 justify-between">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <a href="/" class="text-lg">Tinogasta Labs</a>
          </div>
        </div>

        <!-- Desktop Navigation -->
        <div class="hidden md:flex md:items-center md:space-x-6">
          {
            navItems.map(item => (
              <a
                href={item.url}
                class="text-fg-muted rounded-md px-3 py-2 text-sm font-medium transition-colors duration-200"
              >
                {item.name}
              </a>
            ))
          }
        </div>

        <!-- Mobile menu button -->
        <div class="flex items-center md:hidden">
          <button
            type="button"
            id="mobile-menu-button"
            class="z-50 inline-flex items-center justify-center rounded-md p-2"
            aria-controls="mobile-menu"
            aria-expanded="false"
            aria-labelledby="mobile-button-label"
          >
            <span class="sr-only" id="mobile-button-label">Open main menu</span>
            <!-- Icon when menu is closed -->
            <Icon name="menu" class="size-5" id="menu-closed-icon" />
            <!-- Icon when menu is open -->
            <Icon name="cross-2" class="hidden size-5" id="menu-open-icon" />
          </button>
        </div>
      </div>
    </nav>

    <!-- Mobile menu, show/hide based on menu state -->
    <div
      id="mobile-menu"
      class="bg-canvas fixed inset-0 z-40 flex flex-col items-center justify-center transition-opacity duration-150 ease-in-out md:hidden"
      inert
    >
      <div class="flex w-full flex-col items-center space-y-8 px-4">
        {
          navItems.map(item => (
            <a
              href={item.url}
              class="mobile-menu-link text-fg-muted text-2xl font-light transition-colors duration-200"
            >
              {item.name}
            </a>
          ))
        }
      </div>
    </div>
  </Container>
</header>

<script>
  function toggleMenu(
    mobileMenu?: HTMLElement | null,
    mobileButton?: HTMLElement | null,
  ) {
    const expanded = mobileButton?.getAttribute('aria-expanded') === 'true'
    mobileMenu?.classList.toggle('open')
    document.body.classList.toggle('overflow-hidden')
    mobileButton?.setAttribute('aria-expanded', expanded ? 'false' : 'true')
    const menuClosedIcon = document.getElementById('menu-closed-icon')
    const menuOpenIcon = document.getElementById('menu-open-icon')

    menuClosedIcon?.classList.toggle('hidden')
    menuOpenIcon?.classList.toggle('hidden')

    if (expanded) {
      mobileMenu?.setAttribute('inert', '')
    } else {
      mobileMenu?.removeAttribute('inert')
    }
  }

  document.addEventListener('astro:page-load', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button')
    const mobileMenu = document.getElementById('mobile-menu')
    const mobileMenuLinks = document.querySelectorAll('.mobile-menu-link')

    mobileMenuButton?.addEventListener('click', () => {
      toggleMenu(mobileMenu, mobileMenuButton)
    })

    mobileMenuLinks.forEach(link => {
      link.addEventListener('click', () => {
        toggleMenu(mobileMenu, mobileMenuButton)
      })
    })

    if (mobileMenu?.classList.contains('open')) {
      toggleMenu(mobileMenu, mobileMenuButton)
    }
  })
</script>

<style>
  #mobile-menu {
    pointer-events: none;
    opacity: 0;
  }

  #mobile-menu.open {
    opacity: 1;
    pointer-events: auto;
  }
</style>

---
import { getRelativeLocaleUrl } from 'astro:i18n'
import { langs } from '~/i18n/types'
import Icon from './ui/Icon.astro'

const currentLocale = Astro.currentLocale

const locales = Object.entries(langs).map(([value, label]) => ({
  value,
  path: getRelativeLocaleUrl(
    value,
    Astro.url.pathname.replace(/^\/[a-zA-Z-]+/, ''),
  ),
  label,
}))
---

<label
  class="border-outline xs:w-56 bg-canvas-muted text-fg-muted relative inline-block w-full rounded-lg border-2 font-medium"
>
  <select class="h-10 w-full appearance-none px-4 outline-none" data-lang>
    {
      locales.map(lang => (
        <option
          selected={lang.value === currentLocale}
          data-lang={lang.value}
          class="bg-canvas-muted text-fg-muted"
          value={lang.path}
        >
          {lang.label}
        </option>
      ))
    }
  </select>
  <Icon
    name="chevron-down"
    class="text-fg-muted pointer-events-none absolute top-2.5 right-4 size-4"
  />
</label>

<script is:inline>
  const select = document.querySelector('[data-lang]')
  select.addEventListener('change', e => {
    location.href = e.target?.value
  })
</script>
